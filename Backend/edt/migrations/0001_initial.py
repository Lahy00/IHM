# Generated by Django 5.0.1 on 2025-04-20 21:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('numClasse', models.AutoField(primary_key=True, serialize=False)),
                ('niveau', models.CharField(max_length=5)),
                ('groupe', models.CharField(max_length=10, null=True)),
            ],
            options={
                'db_table': 'classe',
            },
        ),
        migrations.CreateModel(
            name='Etablissement',
            fields=[
                ('numEtablissement', models.AutoField(primary_key=True, serialize=False)),
                ('nomEtablissement', models.CharField(max_length=50)),
                ('adresse', models.CharField(max_length=50, null=True)),
                ('email', models.EmailField(max_length=50)),
                ('slogant', models.CharField(max_length=255, null=True)),
                ('logo', models.CharField(max_length=100, null=True)),
                ('contact', models.CharField(max_length=17)),
            ],
            options={
                'db_table': 'etablissement',
            },
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('numMatiere', models.AutoField(primary_key=True, serialize=False)),
                ('nomMatiere', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'matiere',
            },
        ),
        migrations.CreateModel(
            name='Salle',
            fields=[
                ('numSalle', models.AutoField(primary_key=True, serialize=False)),
                ('nomSalle', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'salle',
            },
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('contact', models.CharField(max_length=17)),
                ('datenaiss', models.DateField()),
                ('description', models.TextField(null=True)),
                ('image', models.CharField(max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'utilisateur',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('numAction', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=20)),
                ('text', models.CharField(max_length=100, null=True)),
                ('table', models.CharField(max_length=20, null=True)),
                ('statut', models.BooleanField(default=False)),
                ('user_id', models.ForeignKey(db_column='user_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'action',
            },
        ),
        migrations.CreateModel(
            name='Edt',
            fields=[
                ('numEdt', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('heureDebut', models.TimeField()),
                ('heureFin', models.TimeField()),
                ('numClasse', models.ForeignKey(db_column='numClasse', null=True, on_delete=django.db.models.deletion.SET_NULL, to='edt.classe')),
                ('numMatiere', models.ForeignKey(db_column='numMatiere', on_delete=django.db.models.deletion.CASCADE, to='edt.matiere')),
            ],
            options={
                'db_table': 'edt',
            },
        ),
        migrations.CreateModel(
            name='Avoir',
            fields=[
                ('numAvoir', models.AutoField(primary_key=True, serialize=False)),
                ('numEdt', models.ForeignKey(db_column='numEdt', on_delete=django.db.models.deletion.CASCADE, to='edt.edt')),
                ('numEtablissement', models.ForeignKey(db_column='numEtablissement', on_delete=django.db.models.deletion.CASCADE, to='edt.etablissement')),
            ],
            options={
                'db_table': 'avoir',
            },
        ),
        migrations.CreateModel(
            name='Mention',
            fields=[
                ('numMention', models.AutoField(primary_key=True, serialize=False)),
                ('nomMention', models.CharField(max_length=50)),
                ('numEtablissement', models.ForeignKey(db_column='numEtablissement', on_delete=django.db.models.deletion.CASCADE, to='edt.etablissement')),
            ],
            options={
                'db_table': 'mention',
            },
        ),
        migrations.CreateModel(
            name='Parcours',
            fields=[
                ('numParcours', models.AutoField(primary_key=True, serialize=False)),
                ('nomParcours', models.CharField(max_length=50)),
                ('numMention', models.ForeignKey(db_column='numMention', on_delete=django.db.models.deletion.CASCADE, to='edt.mention')),
            ],
            options={
                'db_table': 'parcours',
            },
        ),
        migrations.AddField(
            model_name='edt',
            name='numParcours',
            field=models.ForeignKey(db_column='numParcours', null=True, on_delete=django.db.models.deletion.SET_NULL, to='edt.parcours'),
        ),
        migrations.CreateModel(
            name='Constituer',
            fields=[
                ('numConstituer', models.AutoField(primary_key=True, serialize=False)),
                ('numClasse', models.ForeignKey(db_column='numClasse', on_delete=django.db.models.deletion.CASCADE, to='edt.classe')),
                ('numParcours', models.ForeignKey(db_column='numParcours', on_delete=django.db.models.deletion.CASCADE, to='edt.parcours')),
            ],
            options={
                'db_table': 'constituer',
            },
        ),
        migrations.CreateModel(
            name='Professeur',
            fields=[
                ('numProfesseur', models.AutoField(primary_key=True, serialize=False)),
                ('nomProfesseur', models.CharField(max_length=50)),
                ('prenomProfesseur', models.CharField(max_length=50, null=True)),
                ('grade', models.CharField(max_length=50, null=True)),
                ('sexe', models.CharField(max_length=1)),
                ('adresse', models.CharField(max_length=50, null=True)),
                ('contact', models.CharField(max_length=17, null=True)),
                ('description', models.CharField(max_length=255, null=True)),
                ('numEtablissement', models.ForeignKey(db_column='numEtablissement', on_delete=django.db.models.deletion.CASCADE, to='edt.etablissement')),
            ],
            options={
                'db_table': 'professeur',
            },
        ),
        migrations.CreateModel(
            name='Enseigner',
            fields=[
                ('numEnseigner', models.AutoField(primary_key=True, serialize=False)),
                ('numMatiere', models.ForeignKey(db_column='numMatiere', on_delete=django.db.models.deletion.CASCADE, to='edt.matiere')),
                ('numProfesseur', models.ForeignKey(db_column='numProfesseur', on_delete=django.db.models.deletion.CASCADE, to='edt.professeur')),
            ],
            options={
                'db_table': 'enseigner',
            },
        ),
        migrations.AddField(
            model_name='edt',
            name='numSalle',
            field=models.ForeignKey(db_column='numSalle', null=True, on_delete=django.db.models.deletion.SET_NULL, to='edt.salle'),
        ),
    ]
